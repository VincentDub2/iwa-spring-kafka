services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  service-users:
    build:
      context: ./service-users
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-service-users:5432/usersdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - db-service-users

  service-emplacements:
    build:
      context: ./service-emplacements
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-service-emplacements:5432/emplacementsdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - db-service-emplacements

  service-messaging:
    build:
      context: ./service-messaging
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-service-messaging:5432/messagingdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8083:8080"
    depends_on:
      - kafka
      - db-service-messaging

  # Autres services : ajoutez autant de services que n√©cessaire

  db-service-users:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: usersdb
    ports:
      - "5432:5432"
    volumes:
      - usersdb_data:/var/lib/postgresql/data

  db-service-emplacements:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: emplacementsdb
    ports:
      - "5433:5432"
    volumes:
      - emplacementsdb_data:/var/lib/postgresql/data

  db-service-messaging:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: messagingdb
    ports:
      - "5434:5432"
    volumes:
      - messagingdb_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  usersdb_data:
  emplacementsdb_data:
  messagingdb_data:

networks:
  default:
    name: microservices-network
    driver: bridge
